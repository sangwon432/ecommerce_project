version: '3'
services:
  sangwon_nginx:
    build:
      context: nginx
    container_name: sangwon_nginx
    restart: always
    tty: true
    ports:
      - 80:80
    depends_on:
      - sangwon_backend
      - sangwon_frontend
    networks:
      - sangwon_networks

  sangwon_backend:
    container_name: sangwon_backend
    build:
      dockerfile: Dockerfile
      context: './backend'
    depends_on:
      - sangwondb
      - sangwon_redis
      - sangwon_minio
# DON'T FORGET TO ADD REDIS OT WHATEVER DB IS ADDED ON LATER
    volumes:
      - /backend/node_modules
      - ./backend:/backend
    ports:
      - '8000:8000'
    restart: always
    networks:
      - sangwon_networks

  sangwon_frontend:
    container_name: sangwon_frontend
    build:
      dockerfile: Dockerfile
      context: ./frontend
    depends_on:
      - sangwon_backend
    volumes:
      - /frontend/node_modules
      - ./frontend:/frontend
    ports:
      - 3000:3000
    networks:
      - sangwon_networks

  sangwondb:
    image: postgres:latest
    ports:
      - '5432:5432'
    env_file:
      - ./backend/.env
    volumes:
      - pg_data:/var/lib/postgresql/data/
    networks:
      - sangwon_networks

  sangwon_redis:
    container_name: sangwon_redis
    image: "redis:alpine"
    env_file:
      - ./backend/.env
    ports:
      - 6379:6379
    networks:
      - sangwon_networks

  sangwon_minio:
    image: docker.io/bitnami/minio:2022
    container_name: sangwon_minio
    env_file:
      - docker.env
    ports:
      - '9000:9000'
      - '9001:9001'
    platform: linux/amd64
    networks:
      - sangwon_networks



# ADD NETWORKS (GROUP IT WITH SAME NETWORKS)


#    environment:
#      - POSTGRES_HOST=sangwondb
#      - POSTGRES_PORT=5436
#      - POSTGRES_USER=sangwon
#      - POSTGRES_PASSWORD=sangwonpassword
#      - POSTGRES_DB=sangwon_ecommerce


#        - docker.env


networks:
  sangwon_networks:
    driver: bridge

volumes:
  pg_data:


